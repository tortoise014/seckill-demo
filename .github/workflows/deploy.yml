name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: seckill-demo
  CONTAINER_PORT: 8080

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: seckill-demo

      - name: Run tests
        run: mvn test
        working-directory: seckill-demo

      - name: Verify JAR
        run: ls -lh target/*.jar
        working-directory: seckill-demo

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: seckill-demo/target/*.jar

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./seckill-demo
          file: ./seckill-demo/Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:latest
          load: true

      - name: Save Docker image
        run: docker save ${{ env.IMAGE_NAME }}:latest | gzip > ${{ env.IMAGE_NAME }}.tar.gz

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ${{ env.IMAGE_NAME }}.tar.gz

  deploy:
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Copy Docker image to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.IMAGE_NAME }}.tar.gz
          target: /tmp/

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 停止并删除旧容器
            docker stop ${{ env.IMAGE_NAME }} || true
            docker rm ${{ env.IMAGE_NAME }} || true
            
            # 删除旧镜像
            docker rmi ${{ env.IMAGE_NAME }}:latest || true
            
            # 加载新镜像
            cd /tmp
            docker load -i ${{ env.IMAGE_NAME }}.tar.gz
            
            # 运行新容器
            docker run -d \
              --name ${{ env.IMAGE_NAME }} \
              -p ${{ env.CONTAINER_PORT }}:${{ env.CONTAINER_PORT }} \
              --restart unless-stopped \
              -e TZ=Asia/Shanghai \
              --memory=512m \
              --cpus=1.0 \
              ${{ env.IMAGE_NAME }}:latest
            
            # 清理临时文件
            rm -f /tmp/${{ env.IMAGE_NAME }}.tar.gz
            
            # 检查容器状态
            echo "Container status:"
            docker ps -a | grep ${{ env.IMAGE_NAME }}
            
            # 检查容器日志
            echo "Container logs:"
            docker logs ${{ env.IMAGE_NAME }} --tail 50